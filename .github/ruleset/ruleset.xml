<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="quickstart"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
    <description>Reglas para desarrollos de Salesforce de SBFCorp</description>

    <!--definici칩n
    de reglas:
    https://pmd.github.io/pmd/pmd_rules_apex_bestpractices.html
    -->

    <!-- ####################################################################### -->
    <!--                             BEST PRACTICES                              -->
    <!-- ####################################################################### -->

    <!--<rule
    ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage" />-->

    <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
        message="Cada test debe tener asserts para validar que la l칩gica del proceso sea correcta, no solamente validar que pase el test">
        <priority>1</priority>
    </rule>

    <!--<rule
    ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveRunAs" />-->

    <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation">
        <priority>1</priority>
    </rule>

    <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue">
        <priority>1</priority>
    </rule>

    <!--<rule
    ref="category/apex/bestpractices.xml/AvoidGlobalModifier" />-->

    <!--<rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" />-->

    <!--<rule
    ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel" />-->

    <rule ref="category/apex/bestpractices.xml/QueueableWithoutFinalizer" />

    <rule ref="category/apex/bestpractices.xml/UnusedLocalVariable">
        <priority>3</priority>
    </rule>

    <!-- ####################################################################### -->
    <!--                               CODE STYLE                                -->
    <!-- ####################################################################### -->

    <rule ref="category/apex/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="testClassPattern" value="[a-zA-Z][a-zA-Z0-9_]*" />
            <property name="innerClassPattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="innerInterfacePattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="abstractClassPattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="classPattern" value="[a-zA-Z][a-zA-Z0-9_]*" />
            <property name="interfacePattern" value="[a-zA-Z][a-zA-Z0-9_]*" />
            <property name="enumPattern" value="[a-zA-Z][a-zA-Z0-9_]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart" />

    <rule ref="category/apex/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="enumConstantPattern" value="[A-Z][A-Z0-9_]*" />
            <property name="constantPattern" value="[A-Z][A-Z0-9_]*" />
            <property name="finalPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="instancePattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" />

    <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions">
        <properties>
            <property name="finalMethodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="methodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>

    <!--<rule
    ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" />-->

    <!--<rule
    ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" />-->

    <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions">
        <properties>
            <property name="finalLocalPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="localPattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/MethodNamingConventions">
        <properties>
            <property name="testPattern" value="[a-z][a-zA-Z0-9_]*" />
            <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="instancePattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine">
        <properties>
            <property name="strictMode" value="true" />
            <property name="reportInForLoopInitializer" value="true" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/PropertyNamingConventions">
        <properties>
            <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="instancePattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" />

    <!-- ################################################################### -->
    <!--                               DESIGN                                -->
    <!-- ################################################################### -->

    <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts">
        <priority>1</priority>
        <properties>
            <property name="problemDepth" value="4" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/CognitiveComplexity">
        <priority>1</priority>
        <properties>
            <property name="classReportLevel" value="450" />
            <property name="methodReportLevel" value="30" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/CyclomaticComplexity">
        <priority>1</priority>
        <properties>
            <property name="classReportLevel" value="80" />
            <property name="methodReportLevel" value="25" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/ExcessiveClassLength">
        <priority>1</priority>
        <properties>
            <property name="minimum" value="1000" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/ExcessiveParameterList" message="No usar m치s de 5 par치metros de entrada">
        <priority>2</priority>
        <properties>
            <property name="minimum" value="5" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/ExcessivePublicCount">
        <properties>
            <property name="minimum" value="25" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/NcssConstructorCount"
        message="The constructor has an NCSS line count of {0}">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="25" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/NcssMethodCount">
        <properties>
            <property name="minimum" value="60" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/NcssTypeCount">
        <properties>
            <property name="minimum" value="700" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/StdCyclomaticComplexity">
        <properties>
            <property name="reportLevel" value="18" />
            <property name="showClassesComplexity" value="true" />
            <property name="showMethodsComplexity" value="true" />
        </properties>
    </rule>

    <rule ref="category/apex/design.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="20" />
        </properties>
    </rule>

    <!--<rule
    ref="category/apex/design.xml/UnusedMethod" />-->

    <!-- ################################################################### -->
    <!--                            DOCUMENTATION                            -->
    <!-- ################################################################### -->

    <!--<rule ref="category/apex/documentation.xml/ApexDoc">
        <properties>
            <property name="reportPrivate" value="false" />
            <property name="reportProtected" value="false" />
            <property name="reportMissingDescription" value="false" />
            <property name="reportProperty" value="false" />
        </properties>
    </rule>-->

    <!-- ################################################################### -->
    <!--                             ERROR PRONE                             -->
    <!-- ################################################################### -->

    <rule ref="category/apex/errorprone.xml/ApexCSRF" />

    <!--<rule
    ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" />-->

    <rule ref="category/apex/errorprone.xml/AvoidHardcodingId">
        <priority>1</priority>
    </rule>

    <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations" />

    <rule ref="category/apex/errorprone.xml/EmptyCatchBlock">
        <properties>
            <property name="allowCommentedBlocks" value="false" />
            <property name="allowExceptionNameRegex" value="^(ignored|expected)$" />
        </properties>
    </rule>

    <rule ref="category/apex/errorprone.xml/EmptyIfStmt" />

    <rule ref="category/apex/errorprone.xml/EmptyStatementBlock">
        <properties>
            <property name="reportEmptyPrivateNoArgConstructor" value="true" />
            <property name="reportEmptyVirtualMethod" value="false" />
        </properties>
    </rule>

    <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" />

    <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" />

    <rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter" />

    <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" />

    <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" />

    <rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses">
        <priority>1</priority>
    </rule>

    <!-- ################################################################### -->
    <!--                             PERFORMANCE                             -->
    <!-- ################################################################### -->

    <!--<rule
    ref="category/apex/performance.xml/AvoidDebugStatements" />-->

    <rule ref="category/apex/performance.xml/AvoidNonRestrictiveQueries" />

    <!--<rule
    ref="category/apex/performance.xml/EagerlyLoadedDescribeSObjectResult">
        <properties>
            <property name="noDefault" value="false" />
        </properties>
    </rule>-->

    <rule ref="category/apex/performance.xml/OperationWithHighCostInLoop" />

    <rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" />

    <!-- ################################################################### -->
    <!--                              SECURITY                               -->
    <!-- ################################################################### -->

    <rule ref="category/apex/security.xml/ApexBadCrypto" />

    <!--<rule
    ref="category/apex/security.xml/ApexCRUDViolation">
        <properties>
            <property name="readAuthMethodPattern" value="" />
            <property name="readAuthMethodTypeParamIndex" value="0" />
            <property name="mergeAuthMethodPattern" value="" />
            <property name="mergeAuthMethodTypeParamIndex" value="0" />
            <property name="updateAuthMethodPattern" value="" />
            <property name="updateAuthMethodTypeParamIndex" value="0" />
            <property name="createAuthMethodPattern" value="" />
            <property name="createAuthMethodTypeParamIndex" value="0" />
            <property name="deleteAuthMethodPattern" value="" />
            <property name="deleteAuthMethodTypeParamIndex" value="0" />
            <property name="undeleteAuthMethodPattern" value="" />
            <property name="undeleteAuthMethodTypeParamIndex" value="0" />
        </properties>
    </rule>-->

    <!--<rule
    ref="category/apex/security.xml/ApexDangerousMethods" />-->

    <rule ref="category/apex/security.xml/ApexInsecureEndpoint" />

    <rule ref="category/apex/security.xml/ApexOpenRedirect" />

    <rule ref="category/apex/security.xml/ApexSharingViolations">
        <priority>1</priority>
    </rule>

    <rule ref="category/apex/security.xml/ApexSOQLInjection" />

    <!-- <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" /> -->

    <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" />

    <rule ref="category/apex/security.xml/ApexXSSFromURLParam" />

    <!-- ################################################################### -->
    <!--                                 END                                 -->
    <!-- ################################################################### -->

</ruleset>